version: 2.1
orbs:
  python: circleci/python@2.0.3
  browser-tools: circleci/browser-tools@1.4.0
parameters:
  workflow_run:
    type: string
    default: 'automatic'
  pytest_sample_ui:
    type: string
    default: './test_cases/ui/sample_ui/test_sample_ui.py'
  pytest_sample_api:
    type: string
    default: './test_cases/api/sample_api/test_sample_api.py'
  pytest_ui_functional_path:
    type: string
    default: './test_cases/ui/*/functional_cases'
  pytest_ui_integration_path:
    type: string
    default: './test_cases/ui/*/integration_cases'
  pytest_api_functional_path:
    type: string
    default: './test_cases/api/*/functional_cases'
  pytest_api_integration_path:
    type: string
    default: './test_cases/api/*/integration_cases'
jobs:
  pytest_run_sample_test:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - browser-tools/install-browser-tools:
          chrome-version: 102.0.5005.61
          firefox-version: 101.0.1
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Install Pytest Dependencies
          command: pip install -r requirements.txt
      - run:
          name: Run sample API
          command: |
            cd tests
            pytest -n3 << pipeline.parameters.pytest_sample_api >>
      - run:
          name: Run sample UI
          command: |
            cd tests
            HEADLESS="True" BROWSER="chrome" pytest << pipeline.parameters.pytest_sample_ui >>
  pytest_run_api_functional:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - browser-tools/install-browser-tools:
          chrome-version: 102.0.5005.61
          firefox-version: 101.0.1
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Install Pytest Dependencies
          command: pip install -r requirements.txt
      - run:
          name: Run Functional API tests
          command: |
            cd tests
            pytest -n3 << pipeline.parameters.pytest_api_functional_path >>
  pytest_run_api_integration:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - browser-tools/install-browser-tools:
          chrome-version: 102.0.5005.61
          firefox-version: 101.0.1
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Install Pytest Dependencies
          command: pip install -r requirements.txt
      - run:
          name: Run Integration API tests
          command: |
            cd tests
            pytest -n3 << pipeline.parameters.pytest_api_integration_path >>
  pytest_run_ui_functional:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - browser-tools/install-browser-tools:
          chrome-version: 102.0.5005.61
          firefox-version: 101.0.1
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Install Pytest Dependencies
          command: pip install -r requirements.txt
      - run:
          name: Run Integration UI tests
          command: |
            cd tests
            HEADLESS="True" pytest -n3 << pipeline.parameters.pytest_ui_functional_path >>
  pytest_run_ui_integration:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - browser-tools/install-browser-tools:
          chrome-version: 102.0.5005.61
          firefox-version: 101.0.1
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Install Pytest Dependencies
          command: pip install -r requirements.txt
      - run:
          name: Run Integration UI tests
          command: |
            cd tests
            HEADLESS="True" pytest -n3 << pipeline.parameters.pytest_ui_integration_path >>
workflows:
  pytest_run_sample_test_cases:
    when:
      and:
        - or:
          - equal: [ main, << pipeline.git.branch >> ]
          - or:
            - equal: [ manual, << pipeline.parameters.workflow_run >>]
        - not:
            and:
              - equal: ['none', << pipeline.parameters.pytest_sample_ui >>]
        - not:
            and:
              - equal: ['none', << pipeline.parameters.pytest_sample_api >>]
    jobs:
      - pytest_run_sample_test

  pytest_run_api_functional_cases:
    when:
      and:
        - or:
          - equal: [ main, << pipeline.git.branch >> ]
          - or:
            - equal: [ manual, << pipeline.parameters.workflow_run >>]
        - not:
            and:
              - equal: ['none', << pipeline.parameters.pytest_api_functional_path >>]
    jobs:
      - pytest_run_api_functional

  pytest_run_api_integration_cases:
    when:
      and:
        - or:
          - equal: [ main, << pipeline.git.branch >> ]
          - or:
            - equal: [ manual, << pipeline.parameters.workflow_run >>]
        - not:
            and:
              - equal: ['none', << pipeline.parameters.pytest_api_integration_path >>]
    jobs:
      - pytest_run_api_integration

  pytest_run_ui_functional_cases:
    when:
      and:
        - or:
          - equal: [ main, << pipeline.git.branch >> ]
          - or:
            - equal: [ manual, << pipeline.parameters.workflow_run >>]
        - not:
            and:
              - equal: ['none', << pipeline.parameters.pytest_ui_functional_path >>]
    jobs:
      - pytest_run_ui_functional

  pytest_run_ui_integration_cases:
    when:
      and:
        - or:
          - equal: [ main, << pipeline.git.branch >> ]
          - or:
            - equal: [ manual, << pipeline.parameters.workflow_run >>]
        - not:
            and:
              - equal: ['none', << pipeline.parameters.pytest_ui_integration_path >>]
    jobs:
      - pytest_run_ui_integration
